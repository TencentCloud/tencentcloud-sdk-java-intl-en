/*
 * Copyright (c) 2017-2018 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.tencentcloudapi.cdwpg.v20201230.models;

import com.tencentcloudapi.common.AbstractModel;
import com.tencentcloudapi.common.SSEResponseModel;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;

public class DescribeUpgradeListResponse extends AbstractModel {

    /**
    * Details of instance upgrade records.Note: This field may return null, indicating that no valid values can be obtained.
    */
    @SerializedName("UpgradeItems")
    @Expose
    private UpgradeItem [] UpgradeItems;

    /**
    * Total count of upgrade records.
    */
    @SerializedName("TotalCount")
    @Expose
    private String TotalCount;

    /**
    * The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
    */
    @SerializedName("RequestId")
    @Expose
    private String RequestId;

    /**
     * Get Details of instance upgrade records.Note: This field may return null, indicating that no valid values can be obtained. 
     * @return UpgradeItems Details of instance upgrade records.Note: This field may return null, indicating that no valid values can be obtained.
     */
    public UpgradeItem [] getUpgradeItems() {
        return this.UpgradeItems;
    }

    /**
     * Set Details of instance upgrade records.Note: This field may return null, indicating that no valid values can be obtained.
     * @param UpgradeItems Details of instance upgrade records.Note: This field may return null, indicating that no valid values can be obtained.
     */
    public void setUpgradeItems(UpgradeItem [] UpgradeItems) {
        this.UpgradeItems = UpgradeItems;
    }

    /**
     * Get Total count of upgrade records. 
     * @return TotalCount Total count of upgrade records.
     */
    public String getTotalCount() {
        return this.TotalCount;
    }

    /**
     * Set Total count of upgrade records.
     * @param TotalCount Total count of upgrade records.
     */
    public void setTotalCount(String TotalCount) {
        this.TotalCount = TotalCount;
    }

    /**
     * Get The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem. 
     * @return RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public String getRequestId() {
        return this.RequestId;
    }

    /**
     * Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     * @param RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public void setRequestId(String RequestId) {
        this.RequestId = RequestId;
    }

    public DescribeUpgradeListResponse() {
    }

    /**
     * NOTE: Any ambiguous key set via .set("AnyKey", "value") will be a shallow copy,
     *       and any explicit key, i.e Foo, set via .setFoo("value") will be a deep copy.
     */
    public DescribeUpgradeListResponse(DescribeUpgradeListResponse source) {
        if (source.UpgradeItems != null) {
            this.UpgradeItems = new UpgradeItem[source.UpgradeItems.length];
            for (int i = 0; i < source.UpgradeItems.length; i++) {
                this.UpgradeItems[i] = new UpgradeItem(source.UpgradeItems[i]);
            }
        }
        if (source.TotalCount != null) {
            this.TotalCount = new String(source.TotalCount);
        }
        if (source.RequestId != null) {
            this.RequestId = new String(source.RequestId);
        }
    }


    /**
     * Internal implementation, normal users should not use it.
     */
    public void toMap(HashMap<String, String> map, String prefix) {
        this.setParamArrayObj(map, prefix + "UpgradeItems.", this.UpgradeItems);
        this.setParamSimple(map, prefix + "TotalCount", this.TotalCount);
        this.setParamSimple(map, prefix + "RequestId", this.RequestId);

    }
}

