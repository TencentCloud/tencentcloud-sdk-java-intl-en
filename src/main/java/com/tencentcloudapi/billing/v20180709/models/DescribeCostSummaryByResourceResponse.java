/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.tencentcloudapi.billing.v20180709.models;

import com.tencentcloudapi.common.AbstractModel;
import com.tencentcloudapi.common.SSEResponseModel;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;

public class DescribeCostSummaryByResourceResponse extends AbstractModel {

    /**
    * Data readiness, 0 for not ready, 1 for ready
    */
    @SerializedName("Ready")
    @Expose
    private Long Ready;

    /**
    * Consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
    */
    @SerializedName("Total")
    @Expose
    private ConsumptionSummaryTotal Total;

    /**
    * Filter criteria
Note: This field may return null, indicating that no valid values can be obtained.
    */
    @SerializedName("ConditionValue")
    @Expose
    private ConsumptionResourceSummaryConditionValue ConditionValue;

    /**
    * Record countNote: This field may return null, indicating that no valid values can be obtained.
    */
    @SerializedName("RecordNum")
    @Expose
    private Long RecordNum;

    /**
    * Resource consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
    */
    @SerializedName("Data")
    @Expose
    private ConsumptionResourceSummaryDataItem [] Data;

    /**
    * The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
    */
    @SerializedName("RequestId")
    @Expose
    private String RequestId;

    /**
     * Get Data readiness, 0 for not ready, 1 for ready 
     * @return Ready Data readiness, 0 for not ready, 1 for ready
     */
    public Long getReady() {
        return this.Ready;
    }

    /**
     * Set Data readiness, 0 for not ready, 1 for ready
     * @param Ready Data readiness, 0 for not ready, 1 for ready
     */
    public void setReady(Long Ready) {
        this.Ready = Ready;
    }

    /**
     * Get Consumption detailsNote: This field may return null, indicating that no valid values can be obtained. 
     * @return Total Consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
     */
    public ConsumptionSummaryTotal getTotal() {
        return this.Total;
    }

    /**
     * Set Consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
     * @param Total Consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
     */
    public void setTotal(ConsumptionSummaryTotal Total) {
        this.Total = Total;
    }

    /**
     * Get Filter criteria
Note: This field may return null, indicating that no valid values can be obtained. 
     * @return ConditionValue Filter criteria
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public ConsumptionResourceSummaryConditionValue getConditionValue() {
        return this.ConditionValue;
    }

    /**
     * Set Filter criteria
Note: This field may return null, indicating that no valid values can be obtained.
     * @param ConditionValue Filter criteria
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public void setConditionValue(ConsumptionResourceSummaryConditionValue ConditionValue) {
        this.ConditionValue = ConditionValue;
    }

    /**
     * Get Record countNote: This field may return null, indicating that no valid values can be obtained. 
     * @return RecordNum Record countNote: This field may return null, indicating that no valid values can be obtained.
     */
    public Long getRecordNum() {
        return this.RecordNum;
    }

    /**
     * Set Record countNote: This field may return null, indicating that no valid values can be obtained.
     * @param RecordNum Record countNote: This field may return null, indicating that no valid values can be obtained.
     */
    public void setRecordNum(Long RecordNum) {
        this.RecordNum = RecordNum;
    }

    /**
     * Get Resource consumption detailsNote: This field may return null, indicating that no valid values can be obtained. 
     * @return Data Resource consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
     */
    public ConsumptionResourceSummaryDataItem [] getData() {
        return this.Data;
    }

    /**
     * Set Resource consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
     * @param Data Resource consumption detailsNote: This field may return null, indicating that no valid values can be obtained.
     */
    public void setData(ConsumptionResourceSummaryDataItem [] Data) {
        this.Data = Data;
    }

    /**
     * Get The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem. 
     * @return RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public String getRequestId() {
        return this.RequestId;
    }

    /**
     * Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     * @param RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public void setRequestId(String RequestId) {
        this.RequestId = RequestId;
    }

    public DescribeCostSummaryByResourceResponse() {
    }

    /**
     * NOTE: Any ambiguous key set via .set("AnyKey", "value") will be a shallow copy,
     *       and any explicit key, i.e Foo, set via .setFoo("value") will be a deep copy.
     */
    public DescribeCostSummaryByResourceResponse(DescribeCostSummaryByResourceResponse source) {
        if (source.Ready != null) {
            this.Ready = new Long(source.Ready);
        }
        if (source.Total != null) {
            this.Total = new ConsumptionSummaryTotal(source.Total);
        }
        if (source.ConditionValue != null) {
            this.ConditionValue = new ConsumptionResourceSummaryConditionValue(source.ConditionValue);
        }
        if (source.RecordNum != null) {
            this.RecordNum = new Long(source.RecordNum);
        }
        if (source.Data != null) {
            this.Data = new ConsumptionResourceSummaryDataItem[source.Data.length];
            for (int i = 0; i < source.Data.length; i++) {
                this.Data[i] = new ConsumptionResourceSummaryDataItem(source.Data[i]);
            }
        }
        if (source.RequestId != null) {
            this.RequestId = new String(source.RequestId);
        }
    }


    /**
     * Internal implementation, normal users should not use it.
     */
    public void toMap(HashMap<String, String> map, String prefix) {
        this.setParamSimple(map, prefix + "Ready", this.Ready);
        this.setParamObj(map, prefix + "Total.", this.Total);
        this.setParamObj(map, prefix + "ConditionValue.", this.ConditionValue);
        this.setParamSimple(map, prefix + "RecordNum", this.RecordNum);
        this.setParamArrayObj(map, prefix + "Data.", this.Data);
        this.setParamSimple(map, prefix + "RequestId", this.RequestId);

    }
}

